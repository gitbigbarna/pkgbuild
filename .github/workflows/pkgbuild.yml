name: Makepkg-Testing

# Controls when the workflow will run
on:
  repository_dispatch:
    types:
      - webhook
      - '**'
  
  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: echo PayLoads
        run: |
          echo "url: ${{ github.event.client_payload.url }}"
          echo "branch: ${{ github.event.client_payload.branch }}"
          echo "pkgbuild_folder: ${{ github.event.client_payload.pkgbuild }}"

      - name: Makepkg Build and Check
        id: makepkg
        # You may pin to the exact commit or the version.
        uses: gitbigbarna/pkg-action@main
        env:
          nome: $(echo ${{ github.event.client_payload.url }} | rev | cut -d "/" -f1 | rev)
          
        with:
          package: ${{ env.nome }}
          packge_extra: ${{ github.event.client_payload.pkgbuild }}
          branch: stable
          gpg-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.PASSPHRASE }}
        
      - name: Publish Package
        shell: bash -O extglob {0}
        run: |
          echo "release=$(find . -name *.zst | cut -d "/" -f2)"
          release=$(find . -name *.zst | cut -d "/" -f2)
          #gh release create ${release} --title ${release} --repo ${{ github.repository }} --notes "automated release" || echo "release already exists"
          gh release create ${release} --title ${release} --repo gitbigbarna/pkgbuild --notes "automated release" || echo "release already exists"
          #GITHUB_LINK=https://github.com/${GITHUB_REPOSITORY}/releases/download/${release}
          GITHUB_LINK=https://github.com/gitbigbarna/pkgbuild/releases/download/${release}
          echo biglinux
          echo "biglinux"
          echo 'biglinux'
          echo 'GITHUB_LINK=https://github.com/gitbigbarna/pkgbuild/releases/download/'"${release}"
          for i in .zst .sig .tar; do
          #find -iname *$i -exec gh release upload ${release} --repo ${GITHUB_REPOSITORY} --clobber {} \;
          find -iname *$i -exec gh release upload ${release} --repo gitbigbarna/pkgbuild --clobber {} \;
          done
          
      ## Tmate ##
      #- name: Setup tmate session
      #  uses: mxschmitt/action-tmate@v3
          
      - name: Prepare Upload
        shell: bash
        run: |
          echo "## ssh setup"
          mkdir -p /home/runner/.ssh
          touch /home/runner/.ssh/github_actions
          chmod 600 /home/runner/.ssh/github_actions
          #ssh-agent -a /tmp/ssh_agent.sock > /dev/null
       
      - name: Push to Repo
        shell: bash -O extglob {0}
        #env:
          #SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          echo "${{ secrets.PKGBUILD_KEY }}" >> /home/runner/.ssh/github_actions
          eval `ssh-agent -s`
          ssh-add /home/runner/.ssh/github_actions
          ssh-keyscan -t rsa -p ${{ secrets.PKGBUILD_PORT }} ${{ secrets.PKGBUILD_HOST }} >> /home/runner/.ssh/known_hosts
          #gitfolder=$(echo ${{ github.event.client_payload.url }} | rev | cut -d "/" -f1 | rev)
          #cd $gitfolder
          if [ "${{ github.event.client_payload.branch }}" = "stable" ];then branch=stable; else branch=testing; fi
          echo $branch
          echo "test -e $i && rsync -vaPpz -e "ssh -p ${{ secrets.PKGBUILD_PORT }}" $i ${{ secrets.PKGBUILD_USER }}@${{ secrets.PKGBUILD_HOST }}:${{ secrets.PKGBUILD_DIR_TESTING }}/$branch/x86_64"
          for i in *.zst *.sig *.tar; do 
          test -e $i && rsync -vaPpz -e "ssh -p ${{ secrets.PKGBUILD_PORT }}" $i ${{ secrets.PKGBUILD_USER }}@${{ secrets.PKGBUILD_HOST }}:${{ secrets.PKGBUILD_DIR_TESTING }}/$branch/x86_64
          done
          exit 0
          
      ## Tmate ##
      #- name: Setup tmate session
      #  uses: mxschmitt/action-tmate@v3 
          
        
#      - name: upload-cdn77
#        shell: bash -O extglob {0}
#        run: |
#          # if is not yet supported in composite https://github.com/actions/runner/blob/main/docs/adrs/0549-composite-run-steps.md#if-condition
#          if [ -z "${{ inputs.cdn77-host }}" ] || [ -z "${{ inputs.cdn77-user }}" ] || [ -z "${{ inputs.cdn77-pwd }}" ]; then 
#            echo "## not (all) credentials given for cdn77 upload"
#            exit 0
#          fi
#          
#          echo "## cdn77 upload"
#          
#          ssh-keyscan -t rsa ${{ inputs.cdn77-host }} >> /home/runner/.ssh/known_hosts
#          ## create target dir
#          sshpass -p "${{ inputs.cdn77-pwd }}" rsync -vaP --stats -e ssh ${{ inputs.edition }} \
#            ${{ inputs.cdn77-user }}@${{ inputs.cdn77-host }}:/www/
#          # upload
#          sshpass -p "${{ inputs.cdn77-pwd }}" rsync -vaP \
#            --stats -e ssh ${{ steps.upload-prepare.outputs.upload-files }} \
#            ${{ inputs.cdn77-user }}@${{ inputs.cdn77-host }}:/www/${{ inputs.edition }}/${{ inputs.version }}/

